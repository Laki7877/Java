#Server DB
url=jdbc:mysql://shop.uniquejewelrycollection.com:3306/uniqueje_kamoldb
driver=com.mysql.jdbc.Driver
#driver=com.mysql.jdbc.jdbc2.optional.MysqlDataSource
dbuser=uniqueje_kamoldb
dbpassword=2MSIPs8[2)


#query=SELECT DATE(O.created_at) AS ORDER_DATE, O.increment_id AS ORDER_NUMBER, O.customer_firstname AS CUS_NAME, I.sku AS SKU, I.name AS PRO_NAME, S.supplier_name AS SUP_NAME, I.qty_ordered AS QTY, I.price AS PRICE, I.base_cost AS COST, W.warehouse_name AS LOCATION, O.status AS ORDER_STATUS, O.webpos_admin_name AS SELL_MAN FROM uniqueje_kamoldb.mg_sales_flat_order AS O INNER JOIN uniqueje_kamoldb.mg_sales_flat_order_item AS I INNER JOIN mg_erp_inventory_warehouse_order AS WO INNER JOIN mg_erp_inventory_warehouse AS W INNER JOIN mg_erp_inventory_supplier_product AS SP INNER JOIN mg_erp_inventory_supplier AS S ON I.order_id = O.entity_id AND WO.order_id = I.order_id AND WO.product_id = I.product_id AND WO.warehouse_id = W.warehouse_id AND I.product_id = SP.product_id AND SP.supplier_id = S.supplier_id WHERE O.entity_id is not null
main.query=SELECT DATE(O.created_at) AS ORDER_DATE, O.increment_id AS ORDER_NUMBER, '' AS MEMO_NUMBER, O.customer_firstname AS CUS_NAME, I.sku AS SKU, I.name AS PRO_NAME, S.supplier_name AS SUP_NAME, I.qty_ordered AS QTY, I.price AS PRICE, I.base_cost AS COST, I.qty_refunded AS QTY_REFUND, W.warehouse_name AS LOCATION, O.status AS ORDER_STATUS, O.webpos_admin_name AS SELL_MAN,I.discount_amount AS DISCOUNT_AMT FROM uniqueje_kamoldb.mg_sales_flat_order AS O LEFT JOIN uniqueje_kamoldb.mg_sales_flat_order_item AS I ON I.order_id = O.entity_id LEFT JOIN mg_erp_inventory_warehouse_order AS WO ON WO.order_id = I.order_id LEFT JOIN mg_erp_inventory_warehouse AS W ON WO.warehouse_id = W.warehouse_id LEFT JOIN mg_erp_inventory_supplier_product AS SP ON I.product_id = SP.product_id LEFT JOIN mg_erp_inventory_supplier AS S ON SP.supplier_id = S.supplier_id WHERE O.entity_id IS NOT NULL
main.group.by=GROUP BY DATE(O.created_at), O.increment_id, O.customer_firstname, I.sku, I.name, S.supplier_name, I.qty_ordered, I.price, I.base_cost, I.qty_refunded, W.warehouse_name, O.status, O.webpos_admin_name
main.order.by=ORDER BY DATE(A.ORDER_DATE), A.ORDER_NUMBER, A.SUP_NAME DESC
order.status.query=SELECT O.status AS ORDER_STATUS FROM uniqueje_kamoldb.mg_sales_flat_order AS O GROUP BY O.status ORDER BY O.status
supplier.query=SELECT S.supplier_id AS SUP_ID, S.supplier_name AS SUP_NAM FROM mg_erp_inventory_supplier AS S ORDER BY S.supplier_name
credit.memo.query=SELECT DATE(M.created_at) AS ORDER_DATE, O.increment_id AS ORDER_NUMBER, MG.increment_id AS MEMO_NUMBER, O.customer_firstname AS CUS_NAME, I.sku AS SKU, I.name AS PRO_NAME, S.supplier_name AS SUP_NAME, I.qty_ordered AS QTY, I.price AS PRICE, I.base_cost AS COST, I.qty_refunded AS QTY_REFUND, W.warehouse_name AS LOCATION, O.status AS ORDER_STATUS, O.webpos_admin_name AS SELL_MAN,I.discount_amount AS DISCOUNT_AMT FROM uniqueje_kamoldb.mg_sales_flat_order AS O LEFT JOIN uniqueje_kamoldb.mg_sales_flat_order_item AS I ON I.order_id = O.entity_id LEFT JOIN mg_erp_inventory_warehouse_order AS WO ON WO.order_id = I.order_id LEFT JOIN mg_erp_inventory_warehouse AS W ON WO.warehouse_id = W.warehouse_id LEFT JOIN mg_erp_inventory_supplier_product AS SP ON I.product_id = SP.product_id LEFT JOIN mg_erp_inventory_supplier AS S ON SP.supplier_id = S.supplier_id LEFT JOIN mg_sales_flat_creditmemo_grid AS MG ON O.increment_id = MG.order_increment_id LEFT JOIN mg_sales_flat_creditmemo AS M ON MG.increment_id = M.increment_id LEFT JOIN mg_sales_flat_creditmemo_item AS MI ON MG.entity_id = MI.parent_id WHERE O.entity_id IS NOT NULL AND I.qty_refunded > 0
credit.memo.group.by=GROUP BY DATE(M.created_at), O.increment_id, MG.increment_id, O.customer_firstname, I.sku, I.name, S.supplier_name, I.qty_ordered, I.price, I.base_cost, I.qty_refunded, W.warehouse_name, O.status, O.webpos_admin_name

product.history.purchase=SELECT DATE(PO.purchase_on) AS STAMP_DATE, P.entity_id AS PRODUCT_ID, P.sku AS PRODUCT_SKU, PO.purchase_order_id AS PURCHASE_ID, D.qty_delivery AS DEL_QTY, PO.warehouse_name AS FROM_WAREHOUSE, NULL AS FROM_QTY, NULL AS TO_WAREHOUSE, NULL AS TO_QTY, NULL AS ORDER_NUMBER, NULL AS ORDER_QTY, NULL AS SHIP_ID, NULL AS SHIP_QTY, NULL AS REFUND_QTY, NULL AS ADJ_ID, NULL AS ADJ_OLD, NULL AS ADJ_NEW, NULL AS ADJ_REASON, CV.value AS CAT_NAME, max(CV.entity_id), IF(at_name.value_id > 0, at_name.value, at_name_default.value) AS PRODUCT_NAME FROM mg_catalog_product_entity AS P INNER JOIN mg_catalog_category_product as CP on P.entity_id = CP.product_id INNER JOIN mg_catalog_category_entity AS C on CP.category_id = C.entity_id INNER JOIN ( SELECT entity_id,value FROM mg_catalog_category_entity_varchar WHERE attribute_id = ( SELECT attribute_id FROM mg_eav_attribute WHERE attribute_code = 'name' AND entity_type_id = 3 ) GROUP BY entity_type_id,attribute_id,entity_id ORDER BY entity_id DESC ) AS CV on C.entity_id = CV.entity_id INNER JOIN mg_catalog_product_entity_varchar AS at_name_default ON (at_name_default.entity_id = P.entity_id) AND (at_name_default.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND at_name_default.store_id = 0 LEFT JOIN mg_catalog_product_entity_varchar AS at_name ON (at_name.entity_id = P.entity_id) AND (at_name.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND (at_name.store_id = 1) INNER JOIN mg_erp_inventory_purchase_order_product AS POP ON P.entity_id = POP.product_id INNER JOIN mg_erp_inventory_purchase_order AS PO ON POP.purchase_order_id = PO.purchase_order_id INNER JOIN mg_erp_inventory_delivery AS D ON PO.purchase_order_id = D.purchase_order_id AND P.entity_id = D.product_id WHERE PO.`status` = 6
product.history.movement=SELECT DATE(SS.created_at) AS STAMP_DATE, P.entity_id AS PRODUCT_ID, P.sku AS PRODUCT_SKU, NULL AS PURCHASE_ID, NULL AS DEL_QTY, SS.warehouse_name_from AS FROM_WAREHOUSE, SSP.qty AS FROM_QTY, SS.warehouse_name_to AS TO_WAREHOUSE, 0 - SSP.qty AS TO_QTY, NULL AS ORDER_NUMBER, NULL AS ORDER_QTY, NULL AS SHIP_ID, NULL AS SHIP_QTY, NULL AS REFUND_QTY, NULL AS ADJ_ID, NULL AS ADJ_OLD, NULL AS ADJ_NEW, NULL AS ADJ_REASON, CV.value AS CAT_NAME, max(CV.entity_id), IF(at_name.value_id > 0, at_name.value, at_name_default.value) AS PRODUCT_NAME FROM mg_catalog_product_entity AS P INNER JOIN mg_catalog_category_product as CP on P.entity_id = CP.product_id INNER JOIN mg_catalog_category_entity AS C on CP.category_id = C.entity_id INNER JOIN ( SELECT entity_id,value FROM mg_catalog_category_entity_varchar WHERE attribute_id = ( SELECT attribute_id FROM mg_eav_attribute WHERE attribute_code = 'name' AND entity_type_id = 3 ) GROUP BY entity_type_id,attribute_id,entity_id ORDER BY entity_id DESC ) AS CV on C.entity_id = CV.entity_id INNER JOIN mg_catalog_product_entity_varchar AS at_name_default ON (at_name_default.entity_id = P.entity_id) AND (at_name_default.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND at_name_default.store_id = 0 LEFT JOIN mg_catalog_product_entity_varchar AS at_name ON (at_name.entity_id = P.entity_id) AND (at_name.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND (at_name.store_id = 1) INNER JOIN mg_erp_inventory_warehouse_sendstock_product AS SSP ON P.entity_id = SSP.product_id INNER JOIN mg_erp_inventory_warehouse_sendstock AS SS ON SSP.warehouse_sendstock_id = SS.warehouse_sendstock_id WHERE SS.`status` = 1
#product.history.shipment=SELECT DATE(SH.created_at) AS STAMP_DATE, P.entity_id AS PRODUCT_ID, P.sku AS PRODUCT_SKU, NULL AS PURCHASE_ID, NULL AS DEL_QTY, WA.warehouse_name AS FROM_WAREHOUSE, NULL AS FROM_QTY, NULL AS TO_WAREHOUSE, NULL AS TO_QTY, O.increment_id AS ORDER_NUMBER, OI.qty_ordered AS ORDER_QTY, SH.increment_id AS SHIP_ID, SHI.qty AS SHIP_QTY, NULL AS REFUND_QTY, NULL AS ADJ_ID, NULL AS ADJ_OLD, NULL AS ADJ_NEW, NULL AS ADJ_REASON FROM mg_catalog_product_entity as P INNER JOIN mg_sales_flat_shipment_item AS SHI ON P.entity_id = SHI.product_id INNER JOIN mg_sales_flat_shipment AS SH ON SHI.parent_id = SH.entity_id INNER JOIN mg_sales_flat_order AS O ON SH.order_id = O.entity_id INNER JOIN mg_sales_flat_order_item AS OI ON SHI.product_id = OI.product_id AND O.entity_id = OI.order_id INNER JOIN mg_erp_inventory_warehouse_order AS WO ON O.entity_id = WO.order_id and OI.product_id = WO.product_id INNER JOIN mg_erp_inventory_warehouse AS WA ON WO.warehouse_id = WA.warehouse_id
#product.history.shipment=SELECT DATE(O.created_at) AS STAMP_DATE, P.entity_id AS PRODUCT_ID, P.sku AS PRODUCT_SKU, NULL AS PURCHASE_ID, NULL AS DEL_QTY, WA.warehouse_name AS FROM_WAREHOUSE, NULL AS FROM_QTY, NULL AS TO_WAREHOUSE, NULL AS TO_QTY, O.increment_id AS ORDER_NUMBER, OI.qty_ordered AS ORDER_QTY, NULL AS SHIP_ID, NULL AS SHIP_QTY, NULL AS REFUND_QTY, NULL AS ADJ_ID, NULL AS ADJ_OLD, NULL AS ADJ_NEW, NULL AS ADJ_REASON, CV.value AS CAT_NAME, max(CV.entity_id), IF(at_name.value_id > 0, at_name.value, at_name_default.value) AS PRODUCT_NAME FROM mg_catalog_product_entity AS P INNER JOIN mg_catalog_category_product as CP on P.entity_id = CP.product_id INNER JOIN mg_catalog_category_entity AS C on CP.category_id = C.entity_id INNER JOIN ( SELECT entity_id,value FROM mg_catalog_category_entity_varchar WHERE attribute_id = ( SELECT attribute_id FROM mg_eav_attribute WHERE attribute_code = 'name' AND entity_type_id = 3 ) GROUP BY entity_type_id,attribute_id,entity_id ORDER BY entity_id DESC ) AS CV on C.entity_id = CV.entity_id INNER JOIN mg_catalog_product_entity_varchar AS at_name_default ON (at_name_default.entity_id = P.entity_id) AND (at_name_default.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND at_name_default.store_id = 0 LEFT JOIN mg_catalog_product_entity_varchar AS at_name ON (at_name.entity_id = P.entity_id) AND (at_name.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND (at_name.store_id = 1) INNER JOIN mg_sales_flat_order_item AS OI ON P.entity_id = OI.product_id INNER JOIN mg_sales_flat_order AS O ON OI.order_id = O.entity_id INNER JOIN mg_erp_inventory_warehouse_order AS WO ON O.entity_id = WO.order_id AND OI.product_id = WO.product_id INNER JOIN mg_erp_inventory_warehouse AS WA ON WO.warehouse_id = WA.warehouse_id
product.history.shipment=SELECT DATE(O.created_at) AS STAMP_DATE, P.entity_id AS PRODUCT_ID, P.sku AS PRODUCT_SKU, NULL AS PURCHASE_ID, NULL AS DEL_QTY, WA.warehouse_name AS FROM_WAREHOUSE, NULL AS FROM_QTY, NULL AS TO_WAREHOUSE, NULL AS TO_QTY, O.increment_id AS ORDER_NUMBER, OI.qty_ordered AS ORDER_QTY, NULL AS SHIP_ID, NULL AS SHIP_QTY, NULL AS REFUND_QTY, NULL AS ADJ_ID, NULL AS ADJ_OLD, NULL AS ADJ_NEW, NULL AS ADJ_REASON, CV.value AS CAT_NAME, max(CV.entity_id), IF(at_name.value_id > 0, at_name.value, at_name_default.value) AS PRODUCT_NAME FROM mg_catalog_product_entity AS P LEFT JOIN mg_catalog_category_product AS CP ON P.entity_id = CP.product_id LEFT JOIN mg_catalog_category_entity AS C ON CP.category_id = C.entity_id LEFT JOIN (SELECT entity_id, value FROM mg_catalog_category_entity_varchar WHERE attribute_id = (SELECT attribute_id FROM mg_eav_attribute WHERE attribute_code = 'name' AND entity_type_id = 3) GROUP BY entity_type_id, attribute_id, entity_id ORDER BY entity_id DESC) AS CV ON C.entity_id = CV.entity_id LEFT JOIN mg_catalog_product_entity_varchar AS at_name_default ON (at_name_default.entity_id = P.entity_id) AND (at_name_default.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND at_name_default.store_id = 0 LEFT JOIN mg_catalog_product_entity_varchar AS at_name ON (at_name.entity_id = P.entity_id) AND (at_name.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND (at_name.store_id = 1) LEFT JOIN mg_sales_flat_order_item AS OI ON P.entity_id = OI.product_id LEFT JOIN mg_sales_flat_order AS O ON OI.order_id = O.entity_id LEFT JOIN mg_erp_inventory_warehouse_order AS WO ON O.entity_id = WO.order_id AND OI.product_id = WO.product_id LEFT JOIN mg_erp_inventory_warehouse AS WA ON WO.warehouse_id = WA.warehouse_id
product.history.refund=SELECT DATE(M.created_at) AS STAMP_DATE, P.entity_id AS PRODUCT_ID, P.sku AS PRODUCT_SKU, NULL AS PURCHASE_ID, NULL AS DEL_QTY, NULL AS FROM_WAREHOUSE, NULL AS FROM_QTY, RF.warehouse_name AS TO_WAREHOUSE, NULL AS TO_QTY, O.increment_id AS ORDER_NUMBER, NULL AS ORDER_QTY, NULL AS SHIP_ID, NULL AS SHIP_QTY, MI.qty AS REFUND_QTY, NULL AS ADJ_ID, NULL AS ADJ_OLD, NULL AS ADJ_NEW, NULL AS ADJ_REASON, CV.value AS CAT_NAME, max(CV.entity_id), IF(at_name.value_id > 0, at_name.value, at_name_default.value) AS PRODUCT_NAME FROM mg_catalog_product_entity AS P INNER JOIN mg_catalog_category_product as CP on P.entity_id = CP.product_id INNER JOIN mg_catalog_category_entity AS C on CP.category_id = C.entity_id INNER JOIN ( SELECT entity_id,value FROM mg_catalog_category_entity_varchar WHERE attribute_id = ( SELECT attribute_id FROM mg_eav_attribute WHERE attribute_code = 'name' AND entity_type_id = 3 ) GROUP BY entity_type_id,attribute_id,entity_id ORDER BY entity_id DESC ) AS CV on C.entity_id = CV.entity_id INNER JOIN mg_catalog_product_entity_varchar AS at_name_default ON (at_name_default.entity_id = P.entity_id) AND (at_name_default.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND at_name_default.store_id = 0 LEFT JOIN mg_catalog_product_entity_varchar AS at_name ON (at_name.entity_id = P.entity_id) AND (at_name.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND (at_name.store_id = 1) INNER JOIN mg_sales_flat_creditmemo_item AS MI ON P.entity_id = MI.product_id INNER JOIN mg_sales_flat_creditmemo AS M ON MI.parent_id = M.entity_id INNER JOIN mg_sales_flat_order AS O ON M.order_id = O.entity_id INNER JOIN mg_erp_inventory_warehouse_refund RF ON M.entity_id = RF.creditmemo_id AND O.entity_id = RF.order_id AND MI.product_id = RF.product_id
product.history.adjustment=SELECT DATE(ADJ.created_at) AS STAMP_DATE, P.entity_id AS PRODUCT_ID, P.sku AS PRODUCT_SKU, NULL AS PURCHASE_ID, NULL AS DEL_QTY, ADJ.warehouse_name AS FROM_WAREHOUSE, NULL AS FROM_QTY, NULL AS TO_WAREHOUSE, NULL AS TO_QTY, NULL AS ORDER_NUMBER, NULL AS ORDER_QTY, NULL AS SHIP_ID, NULL AS SHIP_QTY, NULL AS REFUND_QTY, ADJP.adjuststock_id AS ADJ_ID, ADJP.old_qty AS ADJ_OLD, ADJP.adjust_qty AS ADJ_NEW, ADJ.reason AS ADJ_REASON, CV.value AS CAT_NAME, max(CV.entity_id), IF(at_name.value_id > 0, at_name.value, at_name_default.value) AS PRODUCT_NAME FROM mg_catalog_product_entity AS P INNER JOIN mg_catalog_category_product as CP on P.entity_id = CP.product_id INNER JOIN mg_catalog_category_entity AS C on CP.category_id = C.entity_id INNER JOIN ( SELECT entity_id,value FROM mg_catalog_category_entity_varchar WHERE attribute_id = ( SELECT attribute_id FROM mg_eav_attribute WHERE attribute_code = 'name' AND entity_type_id = 3 ) GROUP BY entity_type_id,attribute_id,entity_id ORDER BY entity_id DESC ) AS CV on C.entity_id = CV.entity_id INNER JOIN mg_catalog_product_entity_varchar AS at_name_default ON (at_name_default.entity_id = P.entity_id) AND (at_name_default.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND at_name_default.store_id = 0 LEFT JOIN mg_catalog_product_entity_varchar AS at_name ON (at_name.entity_id = P.entity_id) AND (at_name.attribute_id = (SELECT attribute_id FROM mg_eav_attribute ea LEFT JOIN mg_eav_entity_type et ON ea.entity_type_id = et.entity_type_id WHERE ea.attribute_code = 'name' AND et.entity_type_code = 'catalog_product')) AND (at_name.store_id = 1) INNER JOIN mg_erp_inventory_adjuststock_product AS ADJP ON P.entity_id = ADJP.product_id INNER JOIN mg_erp_inventory_adjuststock AS ADJ ON ADJP.adjuststock_id = ADJ.adjuststock_id
product.history.group.by.shipment=GROUP BY DATE(O.created_at), P.sku, O.increment_id
product.history.group.by.purchase=GROUP BY DATE(PO.purchase_on), P.sku, PO.purchase_order_id
product.history.group.by.movement=GROUP BY DATE(SS.created_at), P.sku, SSP.warehouse_sendstock_id
product.history.group.by.refund=GROUP BY DATE(M.created_at), P.sku, O.increment_id
product.history.group.by.adjustment=GROUP BY DATE(ADJ.created_at), P.sku, ADJP.adjuststock_id


